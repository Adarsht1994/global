{
  "advanced_typeahead_config": false,
  "condition": null,
  "data_fetch_script": "var indexGroup = (typeof indexGroup !== \"undefined\") ? indexGroup : \"portal_index_group\";\nvar queryLocation = queryLocation || 0;\nvar count = count || 30;\nvar facets = facets || {};\n(function(query, queryLocation, count, facets, indexGroup) {\n\t\t\t\n\treturn doContextualSearch(query, count, facets, queryLocation);\n\t\t\n\tfunction doContextualSearch(query, count, facets, queryLocation) {\n\t\tvar results = [];\n\t\t\n\t\tvar kbArray = [];\n\t\tif(facets.kb_knowledge_base)\n\t\t\tkbArray.push(facets.kb_knowledge_base);\n\t\telse {\n\t\t\tvar kbs = $sp.getKnowledgeBases();\n\t\t\tif(!gs.nil(kbs))\n\t\t\t\tkbArray = kbs.split(',');\n\t\t}\n\n\t\t// Set up request\n\t\tvar request = {\n\t\t\tkeyword : query,\n\t\t\tlanguage : \"\",\n\t\t\tvariables : {\n\t\t\t\tkb_knowledge_base : kbArray,\n\t\t\t\tkb_category : facets.category,\n\t\t\t\tauthor : [facets.author]\n\t\t\t},\n\t\t\tresource : 'Knowledge',\n\t\t\tcontext : gs.getProperty('glide.knowman.sp.search_context', 'Knowledge Search'),\n\t\t\tkb_query : getFacetQuery(facets),\n\t\t\tsocial_query : \"\",\n\t\t\torder : \"relevancy,true\",\n\t\t\tstart : queryLocation,\n\t\t\tend : count,\n\t\t\tattachment : false,\n\t\t\tknowledge_fields : [\n\t\t\t\t\"number\",\n\t\t\t\t\"sys_id\",\n\t\t\t\t\"published\"\n\t\t\t],\n\t\t\tindex_group: indexGroup\n\t\t};\n\t\t\t\n\t\tif (JSUtil.notNil(data.limit) && !isNaN(data.limit))\n\t\t\trequest.end = data.limit;\t\t\t\n\n\t\t// execute search return result\n\t\tvar response = new KBPortalServiceImpl().getResultData(request);\n\n\t\t// Send results back ro UI\n\t\tvar kbCount = 0;\n\t\tfor (var i = 0; i < response.results.length; i++) {\n\t\t\tresult = response.results[i];\n\t\t\tvar article = {};\n\t\t\tarticle.sys_id = result.meta.sys_id.display_value;\n\t\t\tarticle.number = result.meta.number.display_value;\n\t\t\tarticle.short_description = result.title;\n\t\t\tarticle.published = result.meta.published.display_value;\n\t\t\tarticle.publishedUTC = result.meta.published.value;\n\t\t\tarticle.type = \"kb\";\n\t\t\tarticle.text = result.snippet || \"\";\n\t\t\tarticle.text = $sp.stripHTML(article.text) + \"\";\n\t\t\tarticle.text = article.text.substring(0, 200);\n\t\t\tarticle.score = result.meta.score;\n\t\t\tarticle.label = article.short_description;\n\t\t\tarticle.primary = article.short_description;\n\t\t\tarticle.query_location = queryLocation+kbCount;\n\t\t\tresults.push(article);\n\t\t\t\n\t\t\tkbCount++;\n\t\t}\n\n\t\tif (!data.includeFacets)\n\t\t   $sp.logSearch('kb_knowledge', query, kbCount, data.searchType, data.portal, data.page);\n\t\t\n\t\tif (results.length == 0)\n\t\t\treturn results;\n\t\t\t\t\n\t\tvar lastResult = results.pop();\n\t\t\t\t\n\t\tif(results.length <= count) {\n\t\t\tlastResult.isLastResult = true;\n\t\t\tresults.push(lastResult);\n\t\t}\n\t\t\t\t\n\t\treturn results;\n\t}\n\t\t\t\n\t// Build the kb_query based on facets\n\tfunction getFacetQuery(facets) {\n\t\tvar kbFacetMap = {\n\t\t\t// updated\n\t\t\t\"more_ago\"  : \"^sys_updated_onRELATIVEGT@year@ago@2\",\n\t\t\t\"year_ago\"  : \"^sys_updated_onRELATIVEGT@year@ago@1\",\n\t\t\t\"month_ago\" : \"^sys_updated_onRELATIVEGT@month@ago@1\",\n\t\t\t\"week_ago\"  : \"^sys_updated_onRELATIVEGT@dayofweek@ago@7\",\n\t\t\t\"day_ago\"   : \"^sys_updated_onRELATIVEGT@dayofweek@ago@1\",\n\t\t\t\t\t\n\t\t\t// viewcount\n\t\t\t\"more_than_500\" : \"^sys_view_count>500\",\n\t\t\t\"more_than_200\" : \"^sys_view_count>200\",\n\t\t\t\"more_than_100\" : \"^sys_view_count>100\",\n\t\t\t\"more_than_50\"  : \"^sys_view_count>50\",\n\t\t\t\"more_than_10\"  : \"^sys_view_count>10\",\n\t\t\t\"less_than_10\"  : \"^sys_view_count<10\"\n\t\t};\n\t\t\t\t\t\t\n\t\t// Fill in facet info into kbQuery\n\t\tvar kbQuery = \"\";\n\t\tif (facets.updated)\n\t\t\tkbQuery += kbFacetMap[facets.updated];\n\t\tif (facets.viewcount)\n\t\t\tkbQuery += kbFacetMap[facets.viewcount];\n\t\t\t\t\n\t\t// return built up query, stripping away leading ^\n\t\treturn (kbQuery.startsWith(\"^\"))? kbQuery.substring(1): kbQuery;\n\t}\n})(query, queryLocation, count, facets, indexGroup);",
  "display_fields": null,
  "enable_typeahead": true,
  "facet_generation_script": "(function(query, facetService, searchResults) {\n\n\t/* Calculate your facets here using facetService */\n\t/* var stateFacet = facetService.createFacet('State', 'state'); */\n\t/* stateFacet.addFacetItem('Facet Item Label', '123'); */\n\n\t// If no facets selected and no results, don't show any facets\n\tif(searchResults.length == 0 && Object.keys(facets).length == 0)\t\t\n\t\treturn;\n\t\t\n\tvar kbLabelMap = {\n\t\tmore_than_500: \"More Than 500\",\n\t\tmore_than_200: \"More Than 200\",\n\t\tmore_than_100: \"More Than 100\",\n\t\tmore_than_50: \"More Than 50\",\n\t\tmore_than_10: \"More Than 10\",\n\t\tless_than_10: \"Less Than 10\",\n\t\tmore_ago: \"Past 2 Years\",\n\t\tyear_ago: \"Past Year\",\n\t\tmonth_ago: \"Past Month\",\n\t\tweek_ago: \"Past Week\",\n\t\tday_ago: \"Past 24 Hours\"\n\t};\n\t\n\tvar kbArray = [];\n\tvar kbQuery='';\n\tvar kbQueryDataObj = {};\n\tvar kbQueryData = '';\n\t\n\tvar kbs = $sp.getKnowledgeBases();\n\t\n\tif(!gs.nil(kbs)) {\n\t\tkbArray = kbs.split(',');\n\t\tkbQuery = 'kb_knowledge_baseIN'+kbs;\n\t\tkbQueryDataObj = {value: 'kb', dynamic:false, filters:[{id:'kb', label:'Knowledge base', order:1, query:[{display_value: kbQuery, table: 'kb_knowledge', value: kbQuery}]}]};\n\t\tkbQueryData = JSON.stringify(kbQueryDataObj);\n\t}\n\t\n\tvar kbFacets = new KBPortalServiceImpl().getAllFacets(query, 'en',\n\t\t'{\"kb_knowledge_base\":{\"aggregate\":false,\"include_null\":false,\"orderby\":\"label\",\"table\":\"kb_knowledge\",\"value\":[]}, \"author\":{\"aggregate\":false,\"include_null\":false,\"orderby\":\"label\",\"table\":\"kb_knowledge\",\"value\":[]},\"kb_category\":{\"aggregate\":false,\"include_null\":true,\"orderby\":\"label\",\"table\":\"kb_knowledge\",\"value\":[]}}',\n\t\t'{' + (kbQueryData ? 'kb:'+kbQueryData + \",\" : \"\") + '\"modified\":{\"dynamic\":false,\"filters\":[{\"id\":\"more_ago\",\"label\":\"Past 2 Years\",\"order\":5,\"query\":[{\"display_value\":\"sys_updated_onRELATIVEGT@year@ago@2^sys_updated_onRELATIVELT@year@ago@1\",\"table\":\"\",\"value\":\"sys_updated_onRELATIVEGT@year@ago@2\"}]},{\"id\":\"year_ago\",\"label\":\"Past Year\",\"order\":4,\"query\":[{\"display_value\":\"sys_updated_onRELATIVEGT@year@ago@1^sys_updated_onRELATIVELT@month@ago@1\",\"table\":\"\",\"value\":\"sys_updated_onRELATIVEGT@year@ago@1\"}]},{\"id\":\"month_ago\",\"label\":\"Past Month\",\"order\":3,\"query\":[{\"display_value\":\"sys_updated_onRELATIVEGT@month@ago@1^sys_updated_onRELATIVELT@dayofweek@ago@7\",\"table\":\"\",\"value\":\"sys_updated_onRELATIVEGT@month@ago@1\"}]},{\"id\":\"week_ago\",\"label\":\"Past Week\",\"order\":2,\"query\":[{\"display_value\":\"sys_updated_onRELATIVEGT@dayofweek@ago@2^sys_updated_onRELATIVELT@dayofweek@ago@1\",\"table\":\"\",\"value\":\"sys_updated_onRELATIVEGT@dayofweek@ago@7\"}]},{\"id\":\"day_ago\",\"label\":\"Past 24 Hours\",\"order\":1,\"query\":[{\"display_value\":\"sys_updated_onRELATIVEGT@dayofweek@ago@1\",\"table\":\"\",\"value\":\"sys_updated_onRELATIVEGT@dayofweek@ago@1\"}]}],\"value\":\"\"},\"resources\":{\"dynamic\":true,\"filters\":\"\",\"value\":\"Knowledge\"},\"view_count\":{\"dynamic\":false,\"filters\":[{\"id\":\"more_than_500\",\"label\":\"More Than 500\",\"order\":6,\"query\":[{\"display_value\":\"sys_view_count>500\",\"table\":\"kb_knowledge\",\"value\":\"sys_view_count>500\"}]},{\"id\":\"more_than_200\",\"label\":\"More Than 200\",\"order\":5,\"query\":[{\"display_value\":\"sys_view_count>200^sys_view_count<500\",\"table\":\"kb_knowledge\",\"value\":\"sys_view_count>200\"}]},{\"id\":\"more_than_100\",\"label\":\"More Than 100\",\"order\":4,\"query\":[{\"display_value\":\"sys_view_count>100^sys_view_count<200\",\"table\":\"kb_knowledge\",\"value\":\"sys_view_count>100\"}]},{\"id\":\"more_than_50\",\"label\":\"More Than 50\",\"order\":3,\"query\":[{\"display_value\":\"sys_view_count>50^sys_view_count<100\",\"table\":\"kb_knowledge\",\"value\":\"sys_view_count>50\"}]},{\"id\":\"more_than_10\",\"label\":\"More Than 10\",\"order\":2,\"query\":[{\"display_value\":\"sys_view_count>10^sys_view_count<50\",\"table\":\"kb_knowledge\",\"value\":\"sys_view_count>10\"}]},{\"id\":\"less_than_10\",\"label\":\"Less Than 10\",\"order\":1,\"query\":[{\"display_value\":\"sys_view_count<11\",\"table\":\"kb_knowledge\",\"value\":\"sys_view_count<11\"}]}],\"value\":\"\"}}',\n\t\t'sys_view_count,true');\n\n\tvar kbFacetObj = JSON.parse(kbFacets);\n\t\n\tif(kbFacetObj.kb_knowledge_base && kbFacetObj.kb_knowledge_base.length > 1)\n\t\tcreateVariableFacetFromKB(\"Knowledge Base\", \"kb_knowledge_base\", kbFacetObj.kb_knowledge_base, 'label');\n\tcreateVariableFacetFromKB(\"Author\", \"author\", kbFacetObj.author, 'label');\n\tcreateMultiChoiceFacetFromKB(\"Category\", \"category\", kbFacetObj.kb_category, 'order');\n\tcreateVariableFacetFromKB(\"Last Modified\", \"updated\", kbFacetObj.modified, 'order');\n\tcreateVariableFacetFromKB(\"View Count\", \"viewcount\", kbFacetObj.view_count, 'order');\n\n\tfunction createVariableFacetFromKB(label, variable, values, orderBy){\n\t\tif(!values || values.length == 0) \n\t\t\treturn;\n\n\t\tvar kbFacet = facetService.createFacet(label, variable);\n\t\t\n\t\tif(orderBy)\n\t\t\tvalues.sort(function(a, b){\n\t\t\t\tif(a[orderBy] < b[orderBy]) \n\t\t\t\t\treturn -1;\n\t\t\t\tif(a[orderBy] > b[orderBy]) \n\t\t\t\t\treturn 1;\n\t\t\t\treturn 0;\n\t\t});\n\t\t\t\t\n\t\tif (facets.author && variable == 'author') \n\t\t\tkbFacet.addFacetItem(getLabel(values, facets[variable]), facets[variable]);\n\t\telse if (facets.updated && variable == 'updated' && kbLabelMap[facets.updated]) \n\t\t\tkbFacet.addFacetItem(kbLabelMap[facets.updated], facets.updated);\n\t\telse if (facets.viewcount && variable == 'viewcount' && kbLabelMap[facets.viewcount]) \n\t\t\tkbFacet.addFacetItem(kbLabelMap[facets.viewcount], facets.viewcount);\n\t\telse if (facets.kb_knowledge_base && variable == 'kb_knowledge_base')\n\t\t\tkbFacet.addFacetItem(getLabel(values, facets[variable]), facets[variable]);\n\t\telse {\n\t\t\tfor(var i in values)\n\t\t\t\tkbFacet.addFacetItem(values[i].label, values[i].id);\n\t\t}\n\t}\n\t\n\tfunction createMultiChoiceFacetFromKB(label, variable, values, orderBy){\n\t\tif(!values || values.length == 0) \n\t\t\treturn;\n\t\t\n\t\tvar kbFacet = facetService.createMultiChoiceFacet(label, variable);\n\t\t\n\t\tif(orderBy)\n\t\t\tvalues.sort(function(a, b){\n\t\t\t\tif(a[orderBy] < b[orderBy]) \n\t\t\t\t\treturn -1;\n\t\t\t\tif(a[orderBy] > b[orderBy]) \n\t\t\t\t\treturn 1;\n\t\t\t\treturn 0;\n\t\t});\n\t\t\n\t\tvar kbMap = {};\n\t\tfor(var i in values) {\n\t\t\tvar key = values[i].label;\n            \t\tvar value = values[i].id;\n\t\t\tvar parent = new KBParentData().getParentCategory(value, key);\n\t\t\tkey = parent.join(' > ');\n            \t\tkbMap[key] = value;\t\t\t\t\t\t\t\t\n\t\t}\n\t\t\n\t\tfor(var mapLabel in kbMap) {\n\t\t\tkbFacet.addFacetItem(mapLabel, kbMap[mapLabel]);\n\t\t}\n\t}\n\n\tfunction getLabel(values, id) {\n\t\tfor (var i in values) {\n\t\t\tif(values[i].id == id)\n\t\t\t\treturn values[i].label;\n\t\t}\n\t\treturn \"\";\n\t}\n})(query, facetService, searchResults);",
  "id": "sm_knowledge_search",
  "is_scripted_source": true,
  "name": "SM Knowledge Search",
  "page": "dea5792147132100ba13a5554ee4902d",
  "pagination_supported": false,
  "primary_display_field": null,
  "roles": null,
  "search_page_template": "<div>\n  <a href=\"?id=form&sys_id={{item.sys_id}}&table={{item.table}}\" class=\"h4 text-primary m-b-sm block\">\n    <span ng-bind-html=\"highlight(item.primary, data.q)\"></span>\n  </a>\n  <span class=\"text-muted\" ng-repeat=\"f in item.fields\">\n    <span class=\"m-l-xs m-r-xs\" ng-if=\"!$first\"> &middot; </span>\n    {{f.label}}: <span ng-bind-html=\"highlight(f.display_value, data.q)\"></span>\n  </span>\n</div>",
  "source_table": null,
  "sys_class_name": "sp_search_source",
  "sys_created_by": "lghori",
  "sys_created_on": "2019-12-16 09:22:57",
  "sys_id": "aac7c3741bb10450059a65b82d4bcbc6",
  "sys_mod_count": 1,
  "sys_name": "SM Knowledge Search",
  "sys_package": "global",
  "sys_policy": null,
  "sys_scope": "global",
  "sys_update_name": "sp_search_source_aac7c3741bb10450059a65b82d4bcbc6",
  "sys_updated_by": "lghori",
  "sys_updated_on": "2019-12-16 09:26:18",
  "typeahead_glyph": "file-text-o",
  "typeahead_template": null
}
